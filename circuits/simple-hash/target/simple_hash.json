{"noir_version":"1.0.0-beta.9+6abff2f16e1c1314ba30708d1cf032a536de3d19","hash":"2172249327332470747","abi":{"parameters":[{"name":"preimage","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},"error_types":{}},"bytecode":"H4sIAAAAAAAA/9WaZ2/iYBCETbiS672XcLnebWyDfSUhvffeFRTy/39CdoQtjch+y+bDvtLIaBCIR7u4vLOVoLuORCPF64qoWhyx+nu8iuL1KV5V8a4o3lXFu6Z41xWvX/FuKN5NxbuleLcV747i3VW8e4p3X/EeKN5DxXukeI8V74niPVW8Z4r3XPFeKN5LxXuleK8V743ivVW8AfLQJ7Wgu3r7kPuvt+/48+Vr7i/uK+4n7iPuH+4b7hfuE+4P7gvuB+4Drj/XnevNdeb6cl25nlxHrh/XjevFdeL6cF3KerSC7rlhVDQmGhdNiCZFU6Jp0YxoVjQnmhctiBZFS6Jl0YpoVbQmWhdtiDZFW6Jt0Y5oV7Qn2hcdiA6D7nmJV19xbBXH8GIrqtF3xWEjSTrNeieKo+OwnrezNEzSdiOLsijN0pN6FsedLMmaeTtvhnmUxJ3oNM3j0+LLWna/K7xM5neGzCNOmAcNmUedML83ZB5zwvzBkHncCfNHQ+YJJ8yfDJknnTB/NmSecsL8xZB52gnzV0PmGSfM3wyZZ50wfzdknnPC/MOQed4J809D5gUnzL8MmRedMP82ZF5ywhwaMi87YY4MmVecMNcNmVedMMeGzGtOmBND5nUnzKkh84YT5oYh86YT5qYh85YT5syQedsJc27IvOOE+Y8h864T5r+GzHtOmP8ZMu87Yf5vyHzghHnIkPnQCfOwIfORIXM5T4BVI/5y/qBavI85A8wXlHMFmCPA/ADmBjAvgDkBzAdgLgDzAJgDQP6P3B95P3J+5PvI9ZHnI8dHfo/cHnk9cnrk8wP0G2p0RK47KELuhxwMuRByEuQG2EfHvjL2WbHviH047Ethnwb7FigsnmvxnIfnHjwH4L4Y94m4b8J9BK6ruM7gvIvzEP6X6NPh4Pw6A5x7Vj1YJAAA","debug_symbols":"dY/RCoMwDEX/Jc99cM5t4K+MIbVGKYS0xHYwxH9fFN3cw57S5Pbc5E7QYZuHxnMfRqjvE7TiifzQUHA2+cA6nWYDe9skQdQRHHSlohXkBDVnIgNPS3n9NEbLa01WVC0MIHda1bD3hMtrNl+6+I+W1XWDy1v1wS/KP7SzzsvPxXAuoT7Ni5942xJuMfrM7pAqveKu7LmjBIddFlz8Vk03vAE=","file_map":{"50":{"source":"// Simple hash circuit for benchmarking\n// Uses blake2s since it's available in Noir standard library\n\nuse dep::std;\n\nfn main(preimage: [u8; 32]) -> pub [u8; 32] {\n    // Use blake2s hash function (available in std library)\n    let hash_result = std::hash::blake2s(preimage);\n    hash_result\n}\n\n#[test]\nfn test_simple_hash() {\n    let preimage = [\n        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n        0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,\n        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n        0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f\n    ];\n    \n    let result = main(preimage);\n    \n    // The result should be a 32-byte hash\n    assert(result.len() == 32);\n}","path":"/Users/francoperez/repos/proyectos-lokos/aztec/noir-benchmark-cli/circuits/simple-hash/src/main.nr"}},"names":["main"],"brillig_names":[]}